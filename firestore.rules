rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow authenticated users to read party and user data
    match /parties/{partyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Allow updates only by the creator or specifically for ratings/comments/media/participants by any authenticated user
      allow update: if request.auth != null && (
                      request.auth.uid == resource.data.createdBy || // Creator can update anything
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ratings', 'comments', 'mediaUrls', 'participants', 'participantEmails']) // Others can update specific fields
                    );
      allow delete: if false; // Only admins (via Cloud Functions) should delete
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      // Allow user to create their own document or update their own document
      allow create, update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Or check for admin role via Cloud Function if needed
    }

     // If you have subcollections, define rules for them here
     // Example for comments within parties:
     match /parties/{partyId}/comments/{commentId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null;
       allow update, delete: if false; // Usually comments are not editable/deletable by users
     }
  }
}